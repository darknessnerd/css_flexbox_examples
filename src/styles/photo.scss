.photo {
  /**
   * Lay out the children of this container with
   * flexbox, which is horizontal by default.
   */
  display: flex;

  /**
   * Align all the children to the end of the main
   * axis. This is the right side, by default.
   */
  justify-content: flex-end;

  /**
   * Align all the children to the end of the
   * secondary axis. This is the bottom, by default.
   */
  align-items: flex-end;

  width: 145px;
  margin: 5px;
  padding: 5px 10px;
  font-size: 18px;
  font-weight: bold;
  text-shadow: 0 2px 3px rgba(0, 0, 0, 0.5);
  color: #FFFFFF;
  background-size: cover;
  background-position: center;
  border-radius: 4px;
}

.photo:last-child {
  /**
   * This is the first part of a flexbox hack.
   * It addresses a problem flexbox has with scrolling
   * content. Without this hack, the children on the
   * far right of the container will be flush against
   * the container's right edge.
   */
  position: relative;
}

.photo:last-child::after {
  /**
   * This is the second part of the hack. It creates
   * an invisible element on the last child that
   * forces a space between the child and the right
   * edge of the container.
   */
  display: block;
  width: 11px;
  height: 1px;
  position: absolute;
  top: 0;
  left: 100%;
  visibility: hidden;
  content: "";

  border: 1px solid red;
}
.photo--large {
  height: 120px;
}
.photo--small {
  height: 70px;
}

.photo--medium {
  height: 90px;
}
.photo-bg {
  background-image: url('/public/images/troll.png');
}
.mosaic {
  /**
   * Lay out the children of this container with
   * flexbox, which is horizontal by default.
   */
  display: flex;

  /**
   * Set the main axis to be vertical instead of
   * horizontal, so now the children are laid out
   * vertically, from top to bottom.
   */
  flex-direction: column;

  /**
   * Now when the children wrap, they'll wrap to the
   * next "column".
   */
  flex-wrap: wrap;



  height: 370px;
  padding: 6px;
  border: 1px solid #D7DBDD;
  overflow: auto;
}
.gallery {
  /**
   * Lay out the children of this container with
   * flexbox, which is horizontal by default.
   */
  display: flex;

  /**
   * Allow the children to wrap to the next "row",
   * instead of trying to squeeze them all into
   * a single row.
   */
  flex-wrap: wrap;

  width: 478px;
  padding: 5px;
  border: 1px solid #D7DBDD;
}